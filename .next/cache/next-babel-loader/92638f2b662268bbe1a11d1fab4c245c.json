{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\n\nvar _this = this,\n    _jsxFileName = \"D:\\\\workspaces\\\\mydaystatus - Usando Next js\\\\pages\\\\create-status.js\";\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React, { useState } from 'react';\n\nvar CreateStatus = function CreateStatus() {\n  var _useState = useState({\n    status: 'bem',\n    coords: {\n      lat: null,\n      \"long\": null\n    }\n  }),\n      dados = _useState[0],\n      setDados = _useState[1];\n\n  var getMyLocation = function getMyLocation() {\n    if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(function (position) {\n        setDados(function (old) {\n          return _objectSpread({}, old, {\n            //dados antigos\n            coords: {\n              lat: position.coords.latitude,\n              \"long\": position.coords.longitude\n            }\n          });\n        });\n      });\n    }\n  };\n\n  var onStatusChange = function onStatusChange(evt) {\n    console.log(evt.target); //essa função pega evt(valor de evt)\n    //target pega o valor do atributo\n  };\n\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 13\n    }\n  }, \"Como voc\\xEA est\\xE1? \"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"bem\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 38\n    }\n  }), \"Estou bem e nenhum sintoma.\"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"status\",\n    value: \"gripe\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 38\n    }\n  }), \"Estou com sintomas de gripe/resfriado.\"), __jsx(\"label\", {\n    className: \"block\",\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, __jsx(\"input\", {\n    type: \"radio\",\n    name: \"covi-19\",\n    value: \"bem\",\n    onClick: onStatusChange,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 38\n    }\n  }), \"Estou com sintomas de covid-19.\"), \"Sua posi\\xE7\\xE3o atual: \", JSON.stringify(dados), __jsx(\"button\", {\n    onClick: getMyLocation,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, \"Minha Localiza\\xE7\\xE3o\"));\n};\n\nexport var __N_SSP = true;\nexport default CreateStatus; //verifica que está logado (servidor)","map":{"version":3,"sources":["D:/workspaces/mydaystatus - Usando Next js/pages/create-status.js"],"names":["React","useState","CreateStatus","status","coords","lat","dados","setDados","getMyLocation","navigator","geolocation","getCurrentPosition","position","old","latitude","longitude","onStatusChange","evt","console","log","target","JSON","stringify"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA+B,OAA/B;;AAGA,IAAMC,YAAY,GAAG,SAAfA,YAAe,GAAK;AAAA,kBACID,QAAQ,CAAC;AAC/BE,IAAAA,MAAM,EAAE,KADuB;AAE/BC,IAAAA,MAAM,EAAC;AACHC,MAAAA,GAAG,EAAC,IADD;AAEH,cAAK;AAFF;AAFwB,GAAD,CADZ;AAAA,MACfC,KADe;AAAA,MACRC,QADQ;;AAQtB,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AACxB,QAAGC,SAAS,CAACC,WAAb,EAAyB;AACrBD,MAAAA,SAAS,CAACC,WAAV,CAAsBC,kBAAtB,CAAyC,UAAAC,QAAQ,EAAG;AAChDL,QAAAA,QAAQ,CAAC,UAAAM,GAAG,EAAI;AACZ,mCACOA,GADP;AACW;AACPT,YAAAA,MAAM,EAAC;AACHC,cAAAA,GAAG,EAAEO,QAAQ,CAACR,MAAT,CAAgBU,QADlB;AAEH,sBAAMF,QAAQ,CAACR,MAAT,CAAgBW;AAFnB;AAFX;AAOH,SARO,CAAR;AASH,OAVD;AAWH;AACJ,GAdD;;AAgBA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAAAC,GAAG,EAAG;AACzBC,IAAAA,OAAO,CAACC,GAAR,CAAYF,GAAG,CAACG,MAAhB,EADyB,CACF;AACvB;AACH,GAHD;;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADJ,EAEI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAE,QAA1B;AAAmC,IAAA,KAAK,EAAC,KAAzC;AAA+C,IAAA,OAAO,EAAEJ,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,gCAFJ,EAII;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAE,QAA1B;AAAmC,IAAA,KAAK,EAAC,OAAzC;AAAgD,IAAA,OAAO,EAAEA,cAAzD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,2CAJJ,EAMI;AAAO,IAAA,SAAS,EAAC,OAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAyB;AAAO,IAAA,IAAI,EAAC,OAAZ;AAAoB,IAAA,IAAI,EAAE,SAA1B;AAAoC,IAAA,KAAK,EAAC,KAA1C;AAA+C,IAAA,OAAO,EAAEA,cAAxD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAAzB,oCANJ,+BAQwBK,IAAI,CAACC,SAAL,CAAehB,KAAf,CARxB,EASI;AAAQ,IAAA,OAAO,EAAEE,aAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,+BATJ,CADJ;AAcH,CA3CD;;;AA4CA,eAAeN,YAAf,C,CAEA","sourcesContent":["import React, { useState }from 'react'\r\nimport auth0 from '../lib/auth0'\r\n\r\nconst CreateStatus = () =>{\r\n    const [dados, setDados] = useState({\r\n        status: 'bem',\r\n        coords:{\r\n            lat:null,\r\n            long:null\r\n        }\r\n    })\r\n    const getMyLocation = () => {\r\n        if(navigator.geolocation){\r\n            navigator.geolocation.getCurrentPosition(position =>{\r\n                setDados(old => {\r\n                    return{\r\n                        ...old,//dados antigos\r\n                        coords:{\r\n                            lat: position.coords.latitude,\r\n                            long: position.coords.longitude\r\n                        }\r\n                    }\r\n                })\r\n            })\r\n        }\r\n    }\r\n\r\n    const onStatusChange = evt =>{\r\n        console.log(evt.target)//essa função pega evt(valor de evt)\r\n        //target pega o valor do atributo\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <h1>Como você está? </h1>\r\n            <label className='block'><input type='radio' name= 'status' value='bem' onClick={onStatusChange}/>\r\n                Estou bem e nenhum sintoma.</label>\r\n            <label className='block'><input type='radio' name= 'status' value='gripe'onClick={onStatusChange}/>\r\n                Estou com sintomas de gripe/resfriado.</label>\r\n            <label className='block'><input type='radio' name= 'covi-19' value='bem'onClick={onStatusChange}/>\r\n                Estou com sintomas de covid-19.</label>\r\n            Sua posição atual: {JSON.stringify(dados)}\r\n            <button onClick={getMyLocation}>Minha Localização</button>\r\n        </div>\r\n    )\r\n    \r\n}\r\nexport default CreateStatus\r\n\r\n//verifica que está logado (servidor)\r\nexport async function getServerSideProps ({ req, res }){\r\n    const session = await auth0.getSession(req)\r\n\r\n    if(session){\r\n//return retorna quando está logado\r\n    return{\r\n        props:{\r\n            //caso a pessoa não loge\r\n            //se user for verdadeiro\r\n            isAuth: true,\r\n            user: session.user\r\n        }\r\n    }\r\n}\r\n//Quando não logado\r\n    return{\r\n        props:{//Caso a pessoa não logou volta falso\r\n            isAuth: false,\r\n            user: {}\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}