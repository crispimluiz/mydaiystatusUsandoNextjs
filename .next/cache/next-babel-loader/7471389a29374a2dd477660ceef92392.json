{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"D:\\\\workspaces\\\\mydaystatus - Usando Next js\\\\pages\\\\app.js\";\n\nvar __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport router from 'next/router'; //useEffect é para criar uma função\n//router é como <href>\n//Na tela vai pegar o retorno do login\n\nvar App = function App(props) {\n  useEffect(function () {\n    if (!props.isAuth) {\n      router.push('/');\n    }\n  });\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }\n  }, __jsx(\"h1\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }\n  }, \"App\"), __jsx(\"pre\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }\n  }, JSON.stringify(props, null, 2)));\n};\n\nexport var __N_SSP = true;\nexport default App; //Servidor que recebe a validação da conexão, não vai para o frontEnd","map":{"version":3,"sources":["D:/workspaces/mydaystatus - Usando Next js/pages/app.js"],"names":["React","useEffect","router","App","props","isAuth","push","JSON","stringify"],"mappings":";;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAgC,OAAhC;AAEA,OAAOC,MAAP,MAAmB,aAAnB,C,CACA;AACA;AAEA;;AACA,IAAMC,GAAG,GAAG,SAANA,GAAM,CAAAC,KAAK,EAAG;AAChBH,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAG,CAACG,KAAK,CAACC,MAAV,EAAiB;AACbH,MAAAA,MAAM,CAACI,IAAP,CAAY,GAAZ;AACH;AACJ,GAJQ,CAAT;AAKA,SACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WADJ,EAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAMC,IAAI,CAACC,SAAL,CAAeJ,KAAf,EAAsB,IAAtB,EAA4B,CAA5B,CAAN,CAFJ,CADJ;AAMH,CAZD;;;AAaA,eAAeD,GAAf,C,CAGA","sourcesContent":["import React, { useEffect} from 'react'\r\nimport auth0 from \"../lib/auth0\"\r\nimport router from 'next/router'\r\n//useEffect é para criar uma função\r\n//router é como <href>\r\n\r\n//Na tela vai pegar o retorno do login\r\nconst App = props =>{\r\n    useEffect(() => {\r\n        if(!props.isAuth){\r\n            router.push('/')\r\n        }\r\n    })\r\n    return(\r\n        <div>\r\n            <h1>App</h1>\r\n            <pre>{JSON.stringify(props, null, 2)}</pre>\r\n        </div>\r\n    )\r\n}\r\nexport default App\r\n\r\n\r\n//Servidor que recebe a validação da conexão, não vai para o frontEnd\r\nexport async function getServerSideProps ({ req, res }){\r\n    const session = await auth0.getSession(req)\r\n    if (session){\r\n        return{\r\n            props:{\r\n                //caso a pessoa não loge\r\n                //se user for verdadeiro\r\n                isAuth: true,\r\n                user: session.user\r\n            }\r\n        }\r\n    }\r\n    return{\r\n        props:{//Caso a pessoa não logou volta falso\r\n            isAuth: false,\r\n            user: {}\r\n        }\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}