{"ast":null,"code":"var __jsx = React.createElement;\nimport React, { useEffect } from 'react';\nimport auth0 from '../lib/auth0';\nimport router from 'next/router';\nimport { checkExists, findChecksNearbyCheckin } from '../model/markers';\n\nconst App = props => {\n  useEffect(() => {\n    if (!props.isAuth) {\n      router.push('/');\n    } else if (props.forceCreate) {\n      router.push('/create-status');\n    }\n  });\n\n  if (!props.isAuth || props.forceCreate) {\n    return null;\n  }\n\n  return __jsx(\"div\", null, __jsx(\"h1\", null, \"Status pr\\xF3ximos a voc\\xEA:\"), __jsx(\"table\", null, props.checkins.map(checkin => {\n    return __jsx(\"tr\", {\n      key: checkin.id\n    }, __jsx(\"td\", null, checkin.id === props.user.sub && 'Seu status'), __jsx(\"td\", null, checkin.status), __jsx(\"td\", null, JSON.stringify(checkin.coords)), __jsx(\"td\", null, checkin.distance));\n  })));\n};\n\nexport default App;\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  let user = {};\n  let isAuth = false;\n  let forceCreate = false;\n  let checkins = [];\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    isAuth = true;\n    user = session.user;\n    const todaysData = await checkExists(session.user.sub);\n\n    if (!todaysData) {\n      forceCreate = true;\n    } else {\n      checkins = await findChecksNearbyCheckin(todaysData);\n    }\n  }\n\n  return {\n    props: {\n      isAuth,\n      user,\n      forceCreate,\n      checkins\n    }\n  };\n}","map":null,"metadata":{},"sourceType":"module"}