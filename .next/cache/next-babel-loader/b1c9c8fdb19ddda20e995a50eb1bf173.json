{"ast":null,"code":"var _jsxFileName = \"D:\\\\workspaces\\\\mydaystatus - Usando Next js\\\\pages\\\\create-status.js\";\nvar __jsx = React.createElement;\nimport React from 'react';\nimport auth0 from '../lib/auth0';\n\nconst CreateStatus = () => {\n  return __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 12\n    }\n  }, \"Create Status\");\n};\n\nexport default CreateStatus; //verifica que está logado (servidor)\n\nexport async function getServerSideProps({\n  req,\n  res\n}) {\n  const session = await auth0.getSession(req);\n\n  if (session) {\n    //return retorna quando está logado\n    return {\n      props: {\n        //caso a pessoa não loge\n        //se user for verdadeiro\n        isAuth: true,\n        user: session.user\n      }\n    };\n  } //Quando não logado\n\n\n  return {\n    props: {\n      //Caso a pessoa não logou volta falso\n      isAuth: false,\n      user: {}\n    }\n  };\n}","map":{"version":3,"sources":["D:/workspaces/mydaystatus - Usando Next js/pages/create-status.js"],"names":["React","auth0","CreateStatus","getServerSideProps","req","res","session","getSession","props","isAuth","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,MAAMC,YAAY,GAAG,MAAK;AACtB,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,qBAAP;AACH,CAFD;;AAGA,eAAeA,YAAf,C,CAEA;;AACA,OAAO,eAAeC,kBAAf,CAAmC;AAAEC,EAAAA,GAAF;AAAOC,EAAAA;AAAP,CAAnC,EAAgD;AACnD,QAAMC,OAAO,GAAG,MAAML,KAAK,CAACM,UAAN,CAAiBH,GAAjB,CAAtB;;AAEA,MAAGE,OAAH,EAAW;AACf;AACI,WAAM;AACFE,MAAAA,KAAK,EAAC;AACF;AACA;AACAC,QAAAA,MAAM,EAAE,IAHN;AAIFC,QAAAA,IAAI,EAAEJ,OAAO,CAACI;AAJZ;AADJ,KAAN;AAQH,GAbsD,CAcvD;;;AACI,SAAM;AACFF,IAAAA,KAAK,EAAC;AAAC;AACHC,MAAAA,MAAM,EAAE,KADN;AAEFC,MAAAA,IAAI,EAAE;AAFJ;AADJ,GAAN;AAMH","sourcesContent":["import React from 'react'\r\nimport auth0 from '../lib/auth0'\r\n\r\nconst CreateStatus = () =>{\r\n    return <h1>Create Status</h1>\r\n}\r\nexport default CreateStatus\r\n\r\n//verifica que está logado (servidor)\r\nexport async function getServerSideProps ({ req, res }){\r\n    const session = await auth0.getSession(req)\r\n\r\n    if(session){\r\n//return retorna quando está logado\r\n    return{\r\n        props:{\r\n            //caso a pessoa não loge\r\n            //se user for verdadeiro\r\n            isAuth: true,\r\n            user: session.user\r\n        }\r\n    }\r\n}\r\n//Quando não logado\r\n    return{\r\n        props:{//Caso a pessoa não logou volta falso\r\n            isAuth: false,\r\n            user: {}\r\n        }\r\n    }\r\n}"]},"metadata":{},"sourceType":"module"}